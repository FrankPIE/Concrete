CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)

FUNCTION(CONCRETE_ADD_PROJECT)
    CMAKE_PARSE_ARGUMENTS(
        _PROJECT
        ""
        "NAME;TYPE;"
        "INCLUDE_FILES;SOURCE_FILES;DEPENDS;DEFINITIONS;INCLUDE_DIRECTORIES"
        ${ARGN}
    )

    LIST(APPEND _PROJECT_DEFINITIONS ${CONCRETE_BASE_DEFINITIONS})

    IF(MSVC)
        LIST(APPEND _PROJECT_DEFINITIONS -DUNICODE -D_UNICODE)
    ENDIF(MSVC)

    ADD_DEFINITIONS(${_PROJECT_DEFINITIONS})

    LIST(APPEND _PROJECT_INCLUDE_DIRECTORIES ${CONCRETE_BUILD_PATH})

    INCLUDE_DIRECTORIES(
        ${_PROJECT_INCLUDE_DIRECTORIES}
    )

    IF(${_PROJECT_TYPE} STREQUAL "Execute")
        ADD_EXECUTABLE(${_PROJECT_NAME} ${_PROJECT_INCLUDE_FILES} ${_PROJECT_SOURCE_FILES})
    ELSEIF(${_PROJECT_TYPE} STREQUAL "Static")
        ADD_LIBRARY(${_PROJECT_NAME} ${_PROJECT_INCLUDE_FILES} ${_PROJECT_SOURCE_FILES})
    ELSEIF(${_PROJECT_TYPE} STREQUAL "Dynamic")    
        ADD_LIBRARY(${_PROJECT_NAME} SHARED ${_PROJECT_INCLUDE_FILES} ${_PROJECT_SOURCE_FILES})
    ELSEIF(${_PROJECT_TYPE} STREQUAL "Module")
        ADD_LIBRARY(${_PROJECT_NAME} MODULE ${_PROJECT_INCLUDE_FILES} ${_PROJECT_SOURCE_FILES})
    ENDIF()

    # Todo::DEPENDS
ENDFUNCTION(CONCRETE_ADD_PROJECT)

FUNCTION(CONCRETE_ADD_SUBDIRECTORY DIR_PATH)
    ADD_SUBDIRECTORY(${DIR_PATH} ${DIR_PATH}.out)
ENDFUNCTION(CONCRETE_ADD_SUBDIRECTORY)

FUNCTION(CONCRETE_ADD_SUBDIRECTORY_WITH_FOLDER DIR_PATH FOLDER_NAME)
    ADD_SUBDIRECTORY(${DIR_PATH} ${DIR_PATH}.out)
    SET_PROPERTY(DIRECTORY "${FOLDER_NAME}" PROPERTY FOLDER "${DIR_PATH}")
ENDFUNCTION(CONCRETE_ADD_SUBDIRECTORY_WITH_FOLDER)