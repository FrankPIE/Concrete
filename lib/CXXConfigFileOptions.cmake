CMAKE_MINIMUM_REQUIRED(VERSION 3.0.2)

SET(CONCRETE_BASE_DEFINITIONS)

# Config Option
SET(CONCRETE_WIN32_SHUT_MIN_MAX FALSE CACHE BOOL "Shut win32 min/max" FORCE)

SET(CONCRETE_USE_BOOST FALSE CACHE BOOL "Is use boost library" FORCE)
SET(CONCRETE_USE_BOOST_ALL_DYN_LINK FALSE CACHE BOOL "Boost all link dynamic library" FORCE)

MACRO(CONCRETE_CXX_CONFIG_OPTION_ENABLE)
    CMAKE_PARSE_ARGUMENTS(
        CONCRETE
        ""
        "WIN32_SHUT_MIN_MAX;USE_BOOST;USE_BOOST_ALL_DYN_LINK"
        ""
        ${ARGN}
    )

    IF(${CONCRETE_WIN32_SHUT_MIN_MAX})
        LIST(APPEND CONCRETE_BASE_DEFINITIONS -DCONCRETE_WIN32_SHUT_MIN_MAX)
    ENDIF()

    IF(${CONCRETE_USE_BOOST})
        LIST(APPEND CONCRETE_BASE_DEFINITIONS -DCONCRETE_USE_BOOST)
    ENDIF()

    IF(${CONCRETE_USE_BOOST_ALL_DYN_LINK})
        LIST(APPEND CONCRETE_BASE_DEFINITIONS -DCONCRETE_USE_BOOST_ALL_DYN_LINK)
    ENDIF()
ENDMACRO(CONCRETE_CXX_CONFIG_OPTION_ENABLE)

MACRO(CONCRETE_GEN_CXX_CONFIG_FILE DEST_PATH)
    IF (NOT ${CONCRETE_INIT_COMPLETED})
        MESSAGE(FATAL_ERROR "Library has not been initialized! please call concrete_init first!")
    ENDIF()

    CONFIGURE_FILE(
        ${CONCRETE_PATH}/CXX_CONFIG.h.in
        ${DEST_PATH}
    )
ENDMACRO(CONCRETE_GEN_CXX_CONFIG_FILE)
